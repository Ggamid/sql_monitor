from loader import dp
from aiogram import types
from aiogram.dispatcher import FSMContext
from states import CreateTable
from keyboards import kb_confirmation
from SQL.wrk_db import create_table_with_bot
from aiogram.dispatcher.filters import Command


@dp.message_handler(Command("create_table"))
async def create_table(message: types.Message):
    await message.answer("–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∑–æ–≤–ª–∏—Ç –≤–∞–º —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å–æ —Å—Ç–æ–ª–±—Ü–∞–º–∏ –∏–º–µ—é—â–∏–º–∏ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö varchar(255)"
                         "\n\n–ü—Ä–∏—à–ª–∏—Ç–µ –∏–º—è –¥–ª—è –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã ‚úçüèª")
    await CreateTable.getNameTable.set()


@dp.message_handler(state=CreateTable.getNameTable)
async def get_table_name(message: types.Message, state: FSMContext):
    answer = message.text

    if answer == "/cancel":
        await message.answer("–≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ–±—ã—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ")
        await state.finish()
        return

    await message.answer("–ü—Ä–∏—à–ª–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: \n\n"
                         "name phonenumber tg_id email")

    await state.update_data(getNameTable=answer)

    await CreateTable.getColumns.set()


@dp.message_handler(state=CreateTable.getColumns)
async def get_table_name(message: types.Message, state: FSMContext):
    answer = message.text

    if answer == "/cancel":
        await message.answer("–≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ–±—ã—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ")
        await state.finish()
        return
    await state.update_data(getColumns=answer)

    data = await state.get_data()
    table_name = data.get("getNameTable")
    columns = data.get("getColumns")

    await message.answer(f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å –∏–º–µ–Ω–µ–º '{table_name}' –∏ "
                         f"—Å—Ç–æ–ª–±—Ü–∞–º–∏: \n\n {columns} ", reply_markup=kb_confirmation)

    await CreateTable.confirmation.set()


@dp.message_handler(state=CreateTable.confirmation)
async def command_getId(message: types.Message, state: FSMContext):
    answer = message.text

    if answer == "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":

        data = await state.get_data()
        table_name = data.get("getNameTable")
        columns = data.get("getColumns")

        await message.answer(f"–¢–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞: \n \n"
                             f"{create_table_with_bot(table_name, list(columns.split()))}")
        await state.finish()

    elif answer in ["/cancel", "–û—Ç–º–µ–Ω–∏—Ç—å"]:
        await message.answer("–≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ–±—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ")
        await state.finish()
        return
